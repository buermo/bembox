#20161225

CSS in react is more complicated than expected: there's no good way to figure it out yet actually

#20161220

import css writes directly into html which is bad
i ended up just link stylesheet from server.js
glyphicon is a huge pain. resolving fonts is a huge pain.
still learning webpack

Note: glyphicons are currently not implemented, this is a bit tricky to do with css modules. An idea could be to use svg loader to load the fonts, any help on this appreciated, however currently these should be loaded as a seperate glyphicon.css module, most likely global, pointing to your font paths.

#20161219

learned connect() links store and react component
better understanding of state and props - state handles the computation that happens front end
css still a pain. installed font awesome but i'm thinking import FontAwesome as a whole on every page is probably too inefficient
*content is not defined* error: css file is empty

#20161214

what's this connect library? passing in all the state in one object?
at which step should data manipulation happen? database raw data is not supposed to be used directly, as there's always real time calculation
does combined reducer low efficiency? traversing all the reducers (case uniqueness?)
components are enclosed into one div in render()
still something weird about front end route

#20161213

To reinit a repository, just delete .git folder and it's all free.
git commit -m takes DOUBLE quotes, not single quotes
express routing doesn't read controller/action names, it just recognizes with the url passed in to route() function and the HTTP methods
exec must be called to execute the query

find() parameter is really annoying to compose
  Quest.find({
    $and: [
      { $or: [{startDate: {$exists: false}}, {startDate: {$lt: new Date()}}] },
      { $or: [{endDate: {$exists: false}}, {endDate: {$gt: new Date()}}] }
    ]}).exec((err, quests)
